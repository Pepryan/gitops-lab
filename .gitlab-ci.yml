workflow:
  rules:
  - exists:
    - vm.txt
  # uncomment untuk rule hanya branch "main"
  # - if: $CI_COMMIT_BRANCH == "main"
  
# gunakan string commit untuk nama folder(environment) yang unik
variables:
  env_name: $GITLAB_USER_LOGIN-$CI_COMMIT_SHORT_SHA

stages:
  - generate
  - init
  - validate
  - apply
  - destroy

job-generate:
  stage: generate
  script:
    - echo "user - $GITLAB_USER_LOGIN"
    - echo "env name - $env_name "
    - echo "###################################################"
    # copy file vm.txt untuk provisioning 
    # ke folder /home/gitlab-runner/environment/
    # yang sudah disediakan script .not-tfgen.sh
    - cp vm.txt /home/gitlab-runner/environment/env-$env_name.txt
    - cd /home/gitlab-runner/environment
    - ./not-tfgen.sh $env_name env-$env_name.txt
    - cd $env_name
  tags: [kvm]

job-init:
  stage: init
  script:
    - cd /home/gitlab-runner/environment/$env_name
    - echo "your workdir - $(pwd)"
    - terraform init
  tags: [kvm]

job-validate:
  stage: validate
  script:
    - cd /home/gitlab-runner/environment/$env_name
    - echo "your workdir - $(pwd)"
    - terraform validate
  tags: [kvm]

job-apply:
  stage: apply
  script:
    - cd /home/gitlab-runner/environment/$env_name
    - echo "your workdir - $(pwd)"
    - terraform apply -auto-approve
    - echo "$env_name,create,$(date '+%Y-%m-%d-%H:%M:%S')" >> ../list_env.csv
  tags: [kvm]

job-destroy:
  stage: destroy
  script:
    - cd /home/gitlab-runner/environment/$env_name
    - echo "your workdir - $(pwd)"
    - terraform destroy -auto-approve
    - echo "$env_name,destroy,$(date '+%Y-%m-%d-%H:%M:%S')" >> ../list_env.csv
    - rm -rf $env_name env-$env_name.txt
  when: manual
  tags: [kvm]
