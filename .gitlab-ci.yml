# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Terraform.gitlab-ci.yml

include:
  - template: Terraform/Base.gitlab-ci.yml  # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Terraform/Base.latest.gitlab-ci.yml

stages:
  - validate
  - gen-env
  - tf_plan
  - tf_apply

check-file:
  stage: validate
  script:
    - echo " Validating my terraform code"
    - terraform validate
  rules:
    - exists:
        - vm.txt
    - when: never
  tags: [kvm]
#   needs:
#     - job: check-vm-txt
#   except:
#     refs:
#       - master

generate-environment:
  stage: gen-env
  script:
    - random_string=$(echo $RANDOM | md5sum | head -c 5);
    - echo "Generating terraform environment file"
    - echo $GITLAB_USER_LOGIN
    - echo $random_string
    - folder=$(echo $GITLAB_USER_LOGIN_${random_string});
    - echo ${folder}
    - ./not-tfgen.sh ${folder} vm.txt
    - cd ${folder}
    - mkdir -p ~/.local/share/terraform/plugins/registry.terraform.io/dmacvicar/libvirt/0.6.2/linux_amd64
    - mv provider/terraform-provider-libvirt ~/.local/share/terraform/plugins/registry.terraform.io/dmacvicar/libvirt/0.6.2/linux_amd64
    - terraform init
    - terraform plan
  rules:
    - exists:
        - vm.txt
    - when: never
  tags: [kvm]
  # artifacts:
  #   paths:
  #     - plan

# tf-plan:
#    stage: tf_plan
#    script:
#      - echo "Spinning up resources via terraform apply step"
#      - cd ${folder}
#      - terraform plan
#      - terraform state list
#    when: always
#    allow_failure: false
#    tags: [kvm]
#   artifacts:
#     paths:
#       - terraform.tfstate
# jb-tf-destroy:
#   stage: stg_destroy
#   script:
#     - echo "Destroying resources"
#     - terraform destroy --auto-approve
#   when: manual
#   only:
#     refs:
#       - develop

# build-job:
#   stage: build
#   script:
#     - echo "Hello, $GITLAB_USER_LOGIN!"
#   tags: [kvm]

# test-job1:
#   stage: test
#   script:
#     - echo "This job tests something"
#   tags: [kvm]

# test-job2:
#   stage: test
#   script:
#     - echo "This job tests something, but takes more time than test-job1."
#     - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
#     - echo "which simulates a test that runs 20 seconds longer than test-job1"
#     - sleep 20
#   tags: [kvm]

# deploy-prod:
#   stage: deploy
#   script:
#     - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
#   environment: production
#   tags: [kvm]

# destroy-job:
#   stage: .post
#   script:
#     - echo "Manually trigger"
#   when: manual
#   tags: [kvm]

