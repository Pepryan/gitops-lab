# workflow:
#   rules:
#   - if: $CI_COMMIT_BRANCH == "main"

# gunakan string commit untuk nama folder(environment) yang unik
variables:
  env_name: $GITLAB_USER_LOGIN-$CI_COMMIT_SHORT_SHA

stages:
  - check
  - generate
  - init
  - validate
  - apply
  - destroy

job-check:
  stage: check
  script:
    - echo "checking if vm.txt is exists"
  rules:
    - exists:
        - vm.txt
    - when: never
  tags: [kvm]

job-generate:
  stage: generate
  script:
    - echo "gitlab user - $GITLAB_USER_LOGIN "
    - echo "env name - $env_name "
    - echo "whoami - $(whoami)"
    - echo "####################################################"
    # copy file vm.txt untuk provisioning di folder /home/gitlab-runner/environment/
    # yang sudah disediakan script .not-tfgen.sh
    - cp vm.txt /home/gitlab-runner/environment/vm-$env_name.txt
    - cd /home/gitlab-runner/environment
    - ./not-tfgen.sh $env_name vm-$env_name.txt
    - cd $env_name
    - echo "your workdir - $(pwd)"
    - terraform init
  rules:
    - exists:
        - vm.txt
    - when: never
  tags: [kvm]

job-init:
  stage: init
  script:
    - cd /home/gitlab-runner/environment/$env_name
    - echo "your workdir - $(pwd)"
    - terraform init
  rules:
    - exists:
        - vm.txt
    - when: never
  tags: [kvm]

job-validate:
  stage: validate
  script:
    - cd /home/gitlab-runner/environment/$env_name
    - echo "your workdir - $(pwd)"
    - terraform validate
  rules:
    - exists:
        - vm.txt
    - when: never
  tags: [kvm]

job-apply:
  stage: apply
  script:
    - cd /home/gitlab-runner/environment/$env_name
    - echo "your workdir - $(pwd)"
    # - terraform apply
  rules:
    - exists:
        - vm.txt
    - when: never
  tags: [kvm]


